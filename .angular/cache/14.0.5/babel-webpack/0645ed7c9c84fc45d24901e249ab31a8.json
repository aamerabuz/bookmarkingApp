{"ast":null,"code":"import { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/app-services.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@fortawesome/angular-fontawesome\";\nimport * as i5 from \"../bookmark/bookmark.component\";\n\nfunction BookmarksComponent_app_bookmark_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-bookmark\", 4);\n  }\n\n  if (rf & 2) {\n    const bookmark_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"bookmark\", bookmark_r2);\n  }\n}\n\nfunction BookmarksComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵtext(1, \" Click ( + Mark ) Button To Create New mark\\n\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport class BookmarksComponent {\n  constructor(router, appServices) {\n    this.router = router;\n    this.appServices = appServices;\n    this.bookMarks = [];\n    this.faPlus = faPlus;\n  }\n\n  ngOnInit() {\n    this.appServices.getSelectedCategory().subscribe(data => {\n      console.log('selected category id ==== ', data);\n      this.selectedCa = data._id.toString();\n    }); // console.log('ngOnInit function start from bookMarks component')\n    // this.appServices.getMarks().subscribe(data => {\n    //   this.appServices.getSelectedCategory().subscribe(selectedC => {\n    //     console.log('selected category id ==== ' , selectedC)\n    //     this.bookMarks = data.filter(d => d.categoryId === selectedC._id)\n    //   })\n    // })\n    // this.appServices.getSelectedCategory().subscribe(data => {\n    //   console.log('selected category id ==== ' , data)\n    //   if(data){\n    //     // this.bookMarks = this.bookMarksArray.filter(bm => bm.categoryId === data.id)\n    //   }\n    // })\n  }\n\n  ngAfterViewInit() {\n    this.appServices.getMarks().subscribe(data => {\n      console.log(data);\n      this.bookMarks = data.filter(d => d.categoryId.toString() === this.selectedCa);\n    });\n  }\n\n  onClickAddNewMarkButton() {\n    this.router.navigate(['/addNewMark']);\n  }\n\n}\n\nBookmarksComponent.ɵfac = function BookmarksComponent_Factory(t) {\n  return new (t || BookmarksComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AppServicesService));\n};\n\nBookmarksComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: BookmarksComponent,\n  selectors: [[\"app-bookmarks\"]],\n  decls: 6,\n  vars: 5,\n  consts: [[\"class\", \"bookmark-container\", 3, \"bookmark\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"bookmark-container\", 4, \"ngIf\"], [1, \"button\", \"add-bookmark-button\", 3, \"click\"], [3, \"icon\"], [1, \"bookmark-container\", 3, \"bookmark\"], [1, \"bookmark-container\"]],\n  template: function BookmarksComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, BookmarksComponent_app_bookmark_0_Template, 1, 1, \"app-bookmark\", 0);\n      i0.ɵɵpipe(1, \"async\");\n      i0.ɵɵtemplate(2, BookmarksComponent_div_2_Template, 2, 0, \"div\", 1);\n      i0.ɵɵelementStart(3, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function BookmarksComponent_Template_button_click_3_listener() {\n        return ctx.onClickAddNewMarkButton();\n      });\n      i0.ɵɵelement(4, \"fa-icon\", 3);\n      i0.ɵɵtext(5, \" Mark\\n\");\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(1, 3, ctx.bookMarks));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.bookMarks.length === 0);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"icon\", ctx.faPlus);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i4.FaIconComponent, i5.BookmarkComponent, i3.AsyncPipe],\n  styles: [\".bookmark-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: row;\\n  flex: 1;\\n}\\n\\n.add-bookmark-button[_ngcontent-%COMP%] {\\n  position: fixed;\\n  bottom: 60px;\\n  right: 60px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJvb2ttYXJrcy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQUE7RUFDQSxtQkFBQTtFQUNBLE9BQUE7QUFDRjs7QUFHQTtFQUNFLGVBQUE7RUFDQSxZQUFBO0VBQ0EsV0FBQTtBQUFGIiwiZmlsZSI6ImJvb2ttYXJrcy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5ib29rbWFyay1jb250YWluZXIge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICBmbGV4OiAxO1xyXG5cclxufVxyXG5cclxuLmFkZC1ib29rbWFyay1idXR0b24ge1xyXG4gIHBvc2l0aW9uOiBmaXhlZDtcclxuICBib3R0b206IDYwcHg7XHJcbiAgcmlnaHQ6IDYwcHg7XHJcbn1cclxuIl19 */\"]\n});","map":{"version":3,"mappings":"AAGA,SAASA,MAAT,QAAuB,mCAAvB;;;;;;;;;;ICHAC;;;;;IAAoFA;;;;;;IACpFA;IACEA;IACFA;;;;ADQA,OAAM,MAAOC,kBAAP,CAAyB;EAE7BC,YACUC,MADV,EAEUC,WAFV,EAEyC;IAD/B;IACA;IAGH,iBAAwB,EAAxB;IAGA,cAASL,MAAT;EALF;;EAOLM,QAAQ;IAEN,KAAKD,WAAL,CAAiBE,mBAAjB,GAAuCC,SAAvC,CAAiDC,IAAI,IAAG;MACtDC,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CF,IAA1C;MACA,KAAKG,UAAL,GAAkBH,IAAI,CAACI,GAAL,CAASC,QAAT,EAAlB;IAED,CAJD,EAFM,CAON;IACA;IACA;IACA;IACA;IAEA;IACA;IAIA;IACA;IACA;IACA;IACA;IACA;EAED;;EAEDC,eAAe;IACb,KAAKV,WAAL,CAAiBW,QAAjB,GAA4BR,SAA5B,CAAsCC,IAAI,IAAG;MAC3CC,OAAO,CAACC,GAAR,CAAYF,IAAZ;MACA,KAAKQ,SAAL,GAAiBR,IAAI,CAACS,MAAL,CAAYC,CAAC,IAAIA,CAAC,CAACC,UAAF,CAAaN,QAAb,OAA4B,KAAKF,UAAlD,CAAjB;IACD,CAHD;EAID;;EAEMS,uBAAuB;IAC5B,KAAKjB,MAAL,CAAYkB,QAAZ,CAAqB,CAAC,aAAD,CAArB;EACD;;AAhD4B;;;mBAAlBpB,oBAAkBD;AAAA;;;QAAlBC;EAAkBqB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCX/B1B;;MACAA;MAGAA;MAA2CA;QAAA,OAAS2B,6BAAT;MAAkC,CAAlC;MACzC3B;MAAoCA;MACtCA;;;;MAN8DA;MAC7BA;MAAAA;MAItBA;MAAAA","names":["faPlus","i0","BookmarksComponent","constructor","router","appServices","ngOnInit","getSelectedCategory","subscribe","data","console","log","selectedCa","_id","toString","ngAfterViewInit","getMarks","bookMarks","filter","d","categoryId","onClickAddNewMarkButton","navigate","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\aamer\\Desktop\\cambium\\bookmarking-app\\src\\app\\components\\bookmarks\\bookmarks.component.ts","C:\\Users\\aamer\\Desktop\\cambium\\bookmarking-app\\src\\app\\components\\bookmarks\\bookmarks.component.html"],"sourcesContent":["import { AfterViewInit, Component, OnInit } from '@angular/core';\nimport { Colors } from '../../models/colors';\nimport { BookMark } from '../../models/bookmarking.interface';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { Router } from '@angular/router';\nimport { AppServicesService } from 'src/app/services/app-services.service';\n@Component({\n  selector: 'app-bookmarks',\n  templateUrl: './bookmarks.component.html',\n  styleUrls: ['./bookmarks.component.scss']\n})\nexport class BookmarksComponent implements OnInit, AfterViewInit {\n\n  constructor(\n    private router: Router,\n    private appServices: AppServicesService\n  ) { }\n\n  public bookMarks: BookMark[] = [];\n  public selectedCa?: string;\n\n  public faPlus = faPlus\n\n  ngOnInit(): void {\n\n    this.appServices.getSelectedCategory().subscribe(data => {\n      console.log('selected category id ==== ', data)\n      this.selectedCa = data._id.toString()\n\n    })\n    // console.log('ngOnInit function start from bookMarks component')\n    // this.appServices.getMarks().subscribe(data => {\n    //   this.appServices.getSelectedCategory().subscribe(selectedC => {\n    //     console.log('selected category id ==== ' , selectedC)\n    //     this.bookMarks = data.filter(d => d.categoryId === selectedC._id)\n\n    //   })\n    // })\n\n\n\n    // this.appServices.getSelectedCategory().subscribe(data => {\n    //   console.log('selected category id ==== ' , data)\n    //   if(data){\n    //     // this.bookMarks = this.bookMarksArray.filter(bm => bm.categoryId === data.id)\n    //   }\n    // })\n\n  }\n\n  ngAfterViewInit(): void {\n    this.appServices.getMarks().subscribe(data => {\n      console.log(data)\n      this.bookMarks = data.filter(d => d.categoryId.toString() === this.selectedCa)\n    })\n  }\n\n  public onClickAddNewMarkButton(): void {\n    this.router.navigate(['/addNewMark'])\n  }\n\n}\n","<app-bookmark class=\"bookmark-container\" *ngFor=\"let bookmark of bookMarks | async\" [bookmark]=\"bookmark\"></app-bookmark>\n<div class=\"bookmark-container\" *ngIf=\"bookMarks.length === 0\">\n  Click ( + Mark ) Button To Create New mark\n</div>\n<button class=\"button add-bookmark-button\" (click)=\"onClickAddNewMarkButton()\">\n  <fa-icon [icon]=\"faPlus\"></fa-icon> Mark\n</button>\n"]},"metadata":{},"sourceType":"module"}