{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/aamer/Desktop/cambium/bookmarking-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Colors } from '../../models/colors';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/app-services.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nconst _c0 = [\"f\"];\n\nconst _c1 = function (a0) {\n  return {\n    \"color\": a0\n  };\n};\n\nfunction AddMarkComponent_option_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const color_r2 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", color_r2.value);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(3, _c1, color_r2.value));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", color_r2.key, \" \");\n  }\n}\n\nexport class AddMarkComponent {\n  constructor(appService) {\n    this.appService = appService;\n    this.colors = Colors;\n  }\n\n  ngOnInit() {}\n\n  addMarkSubmit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this.form.valid) {\n        const title = _this.form.value.title;\n        const description = _this.form.value.description;\n        const color = _this.form.value.color;\n        const url = _this.form.value.url;\n        let categoryId = '';\n\n        _this.appService.getSelectedCategory().subscribe( /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator(function* (data) {\n            categoryId = data._id;\n          });\n\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }());\n\n        yield _this.appService.createNewMark(title, description, url, color, categoryId).then(data => {\n          if (data._id) {\n            _this.appService.updateMarks(data, 'add');\n          }\n        });\n        console.log(_this.form);\n      } else {\n        console.log('not valid !!!');\n      }\n    })();\n  }\n\n}\n\nAddMarkComponent.ɵfac = function AddMarkComponent_Factory(t) {\n  return new (t || AddMarkComponent)(i0.ɵɵdirectiveInject(i1.AppServicesService));\n};\n\nAddMarkComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddMarkComponent,\n  selectors: [[\"app-add-mark\"]],\n  viewQuery: function AddMarkComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.form = _t.first);\n    }\n  },\n  decls: 27,\n  vars: 3,\n  consts: [[1, \"form-section\", 3, \"ngSubmit\"], [\"f\", \"ngForm\"], [1, \"text-center\", \"header-title\"], [1, \"form-group\"], [\"for\", \"mTitle\"], [\"ngModel\", \"\", \"required\", \"\", \"type\", \"text\", \"id\", \"mTitle\", \"name\", \"title\", \"placeholder\", \"Title\"], [\"for\", \"mDescription\"], [\"ngModel\", \"\", \"required\", \"\", \"type\", \"text\", \"id\", \"mDescription\", \"name\", \"description\", \"placeholder\", \"Description\"], [\"for\", \"mUrl\"], [\"ngModel\", \"\", \"required\", \"\", \"type\", \"text\", \"id\", \"mUrl\", \"name\", \"url\", \"placeholder\", \"https://exmple.com\"], [\"for\", \"mColor\"], [\"ngModel\", \"\", \"required\", \"\", \"id\", \"mColor\", \"name\", \"color\", 1, \"select\"], [\"selected\", \"\", \"disabled\", \"\"], [3, \"ngStyle\", \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"form-group\", \"align-center\"], [1, \"button\"], [3, \"ngStyle\", \"value\"]],\n  template: function AddMarkComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0, 1);\n      i0.ɵɵlistener(\"ngSubmit\", function AddMarkComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.addMarkSubmit();\n      });\n      i0.ɵɵelementStart(2, \"h3\", 2);\n      i0.ɵɵtext(3, \"Add New Mark\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"label\", 4);\n      i0.ɵɵtext(6, \"Title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 3)(9, \"label\", 6);\n      i0.ɵɵtext(10, \"description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 3)(13, \"label\", 8);\n      i0.ɵɵtext(14, \"Url\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\", 3)(17, \"label\", 10);\n      i0.ɵɵtext(18, \"Color\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"select\", 11)(20, \"option\", 12);\n      i0.ɵɵtext(21, \"Select Color\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(22, AddMarkComponent_option_22_Template, 2, 5, \"option\", 13);\n      i0.ɵɵpipe(23, \"keyvalue\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(24, \"div\", 14)(25, \"button\", 15);\n      i0.ɵɵtext(26, \"Save\");\n      i0.ɵɵelementEnd()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(22);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(23, 1, ctx.colors));\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgStyle, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm, i2.KeyValuePipe],\n  styles: [\".form-section[_ngcontent-%COMP%] {\\n  padding: 90px 50px;\\n  box-shadow: 0px 0px 20px 7px #cccccc;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkZC1tYXJrLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usa0JBQUE7RUFDQSxvQ0FBQTtBQUNGIiwiZmlsZSI6ImFkZC1tYXJrLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZvcm0tc2VjdGlvbiB7XHJcbiAgcGFkZGluZzogOTBweCA1MHB4O1xyXG4gIGJveC1zaGFkb3c6IDBweCAwcHggMjBweCA3cHggI2NjY2NjYztcclxufVxyXG4iXX0= */\"]\n});","map":{"version":3,"mappings":";AAEA,SAASA,MAAT,QAAuB,qBAAvB;;;;;;;;;;;;;;;ICgBQC;IACEA;IACFA;;;;;IAFkFA;IAA1EA;IACNA;IAAAA;;;;ADVV,OAAM,MAAOC,gBAAP,CAAuB;EAG3BC,YACUC,UADV,EACyC;IAA/B;IAEH,cAASJ,MAAT;EADF;;EAGLK,QAAQ,IACP;;EAGYC,aAAa;IAAA;;IAAA;MACxB,IAAI,KAAI,CAACC,IAAL,CAAUC,KAAd,EAAqB;QACnB,MAAMC,KAAK,GAAG,KAAI,CAACF,IAAL,CAAUG,KAAV,CAAgBD,KAA9B;QACA,MAAME,WAAW,GAAG,KAAI,CAACJ,IAAL,CAAUG,KAAV,CAAgBC,WAApC;QACA,MAAMC,KAAK,GAAG,KAAI,CAACL,IAAL,CAAUG,KAAV,CAAgBE,KAA9B;QACA,MAAMC,GAAG,GAAG,KAAI,CAACN,IAAL,CAAUG,KAAV,CAAgBG,GAA5B;QACA,IAAIC,UAAU,GAAG,EAAjB;;QACA,KAAI,CAACV,UAAL,CAAgBW,mBAAhB,GAAsCC,SAAtC;UAAA,6BAAgD,WAAMC,IAAN,EAAa;YAC3DH,UAAU,GAAGG,IAAI,CAACC,GAAlB;UACD,CAFD;;UAAA;YAAA;UAAA;QAAA;;QAGA,MAAM,KAAI,CAACd,UAAL,CAAgBe,aAAhB,CAA8BV,KAA9B,EAAqCE,WAArC,EAAiDE,GAAjD,EAAqDD,KAArD,EAA4DE,UAA5D,EAAwEM,IAAxE,CAA6EH,IAAI,IAAG;UACxF,IAAIA,IAAI,CAACC,GAAT,EAAc;YACZ,KAAI,CAACd,UAAL,CAAgBiB,WAAhB,CAA4BJ,IAA5B,EAAkC,KAAlC;UACD;QACF,CAJK,CAAN;QAKAK,OAAO,CAACC,GAAR,CAAY,KAAI,CAAChB,IAAjB;MACD,CAfD,MAeO;QACLe,OAAO,CAACC,GAAR,CAAY,eAAZ;MACD;IAlBuB;EAmBzB;;AA/B0B;;;mBAAhBrB,kBAAgBD;AAAA;;;QAAhBC;EAAgBsB;EAAAC;IAAA;;;;;;;;;;;;;;;MCT3BxB;MAAMA;QAAA,OAAYyB,mBAAZ;MAA2B,CAA3B;MACJzB;MAAqCA;MAAYA;MACjDA,+BAAwB,CAAxB,EAAwB,OAAxB,EAAwB,CAAxB;MACsBA;MAAKA;MACzBA;MACFA;MACAA,+BAAwB,CAAxB,EAAwB,OAAxB,EAAwB,CAAxB;MAC4BA;MAAWA;MACrCA;MACFA;MACAA,gCAAwB,EAAxB,EAAwB,OAAxB,EAAwB,CAAxB;MACoBA;MAAGA;MACrBA;MACFA;MACAA,gCAAwB,EAAxB,EAAwB,OAAxB,EAAwB,EAAxB;MACsBA;MAAKA;MACzBA,oCAAiE,EAAjE,EAAiE,QAAjE,EAAiE,EAAjE;MAC4BA;MAAYA;MACtCA;;MAGFA;MAGFA,iCAAqC,EAArC,EAAqC,QAArC,EAAqC,EAArC;MACyBA;MAAIA;;;;MAPmCA;MAAAA","names":["Colors","i0","AddMarkComponent","constructor","appService","ngOnInit","addMarkSubmit","form","valid","title","value","description","color","url","categoryId","getSelectedCategory","subscribe","data","_id","createNewMark","then","updateMarks","console","log","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["C:\\Users\\aamer\\Desktop\\cambium\\bookmarking-app\\src\\app\\components\\add-mark\\add-mark.component.ts","C:\\Users\\aamer\\Desktop\\cambium\\bookmarking-app\\src\\app\\components\\add-mark\\add-mark.component.html"],"sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { AppServicesService } from 'src/app/services/app-services.service';\nimport { Colors } from '../../models/colors';\n\n@Component({\n  selector: 'app-add-mark',\n  templateUrl: './add-mark.component.html',\n  styleUrls: ['./add-mark.component.scss']\n})\nexport class AddMarkComponent implements OnInit {\n\n  @ViewChild('f') form : any;\n  constructor(\n    private appService : AppServicesService\n  ) { }\n  public colors = Colors\n\n  ngOnInit(): void {\n  }\n\n\n  public async addMarkSubmit(): Promise<void> {\n    if (this.form.valid) {\n      const title = this.form.value.title\n      const description = this.form.value.description\n      const color = this.form.value.color\n      const url = this.form.value.url\n      let categoryId = ''\n      this.appService.getSelectedCategory().subscribe(async data => {\n        categoryId = data._id\n      })\n      await this.appService.createNewMark(title, description,url,color, categoryId).then(data => {\n        if (data._id) {\n          this.appService.updateMarks(data, 'add')\n        }\n      })\n      console.log(this.form)\n    } else {\n      console.log('not valid !!!')\n    }\n  }\n}\n","  <form (ngSubmit)=\"addMarkSubmit()\" class=\"form-section\" #f=\"ngForm\">\n    <h3 class=\"text-center header-title\">Add New Mark</h3>\n    <div class=\"form-group\">\n      <label for=\"mTitle\">Title</label>\n      <input ngModel required type=\"text\" id=\"mTitle\" name=\"title\" placeholder=\"Title\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"mDescription\">description</label>\n      <input ngModel required type=\"text\" id=\"mDescription\" name=\"description\" placeholder=\"Description\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"mUrl\">Url</label>\n      <input ngModel required type=\"text\" id=\"mUrl\" name=\"url\" placeholder=\"https://exmple.com\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"mColor\">Color</label>\n      <select ngModel required id=\"mColor\" name=\"color\" class=\"select\">\n        <option selected disabled>Select Color</option>\n        <option [ngStyle]=\"{'color':color.value}\" *ngFor=\"let color of colors | keyvalue\" value={{color.value}}>\n          {{color.key}}\n        </option>\n      </select>\n      <!-- <input type=\"text\" id=\"fname\" name=\"fname\" placeholder=\"Color\"> -->\n    </div>\n    <div class=\"form-group align-center\">\n      <button class=\"button\">Save</button>\n    </div>\n  </form>\n"]},"metadata":{},"sourceType":"module"}