{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/aamer/Desktop/cambium/bookmarking-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/app-services.service\";\nimport * as i3 from \"src/app/services/auth.service\";\nimport * as i4 from \"ngx-cookie-service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\nconst _c0 = [\"f\"];\n\nfunction LoginComponent_h6_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"h6\", 13);\n    i0.ÉµÉµtext(1);\n    i0.ÉµÉµelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ÉµÉµnextContext();\n    i0.ÉµÉµadvance(1);\n    i0.ÉµÉµtextInterpolate2(\"\", ctx_r1.loginError, \"\", ctx_r1.showLoginError, \"\");\n  }\n}\n\nexport class LoginComponent {\n  constructor(router, appService, authService, cookieService) {\n    this.router = router;\n    this.appService = appService;\n    this.authService = authService;\n    this.cookieService = cookieService;\n    this.loginError = \"LogIn Error, Please Try Again It's Easy..\";\n    this.showLoginError = false;\n  }\n\n  ngOnInit() {\n    this.cookieService.delete('authToken');\n  }\n\n  login() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this.form.valid) {\n        console.log('form is valid!!!');\n        const email = _this.form.value.email;\n        const password = _this.form.value.password;\n        console.log(_this.form.value.email, ' ---- ', _this.form.value.password);\n        yield _this.authService.loginService(email, password).then(data => {\n          console.log('loginService(email, password).then(data');\n\n          if (!data) {\n            _this.showLoginError = true;\n          }\n        }); // this.appService.setIsLoginStatus(true)\n        // this.router.navigate(['/'])\n      } else {\n        console.log('form is not valid!!!');\n      }\n    })();\n  }\n\n  setShowLoginError(status) {\n    console.log('status ', status);\n    this.showLoginError = status;\n  }\n\n  navigateToSignUp() {\n    this.router.navigate(['/signup']);\n  }\n\n}\n\nLoginComponent.Éµfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ÉµÉµdirectiveInject(i1.Router), i0.ÉµÉµdirectiveInject(i2.AppServicesService), i0.ÉµÉµdirectiveInject(i3.AuthService), i0.ÉµÉµdirectiveInject(i4.CookieService));\n};\n\nLoginComponent.Éµcmp = /*@__PURE__*/i0.ÉµÉµdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  viewQuery: function LoginComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ÉµÉµviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ÉµÉµqueryRefresh(_t = i0.ÉµÉµloadQuery()) && (ctx.form = _t.first);\n    }\n  },\n  decls: 19,\n  vars: 1,\n  consts: [[1, \"form-section\"], [\"f\", \"ngForm\"], [1, \"text-center\", \"header-title\"], [\"class\", \"text-center error\", 4, \"ngIf\"], [1, \"form-group\"], [\"for\", \"lemail\"], [\"required\", \"\", \"ngModel\", \"\", \"type\", \"email\", \"id\", \"lemail\", \"name\", \"email\", \"placeholder\", \"ex@ex.com\", 3, \"ngModelChange\"], [\"for\", \"lpassword\"], [\"required\", \"\", \"ngModel\", \"\", \"type\", \"password\", \"id\", \"lpassword\", \"name\", \"password\", \"placeholder\", \"password\", 3, \"ngModelChange\"], [1, \"form-group\", \"align-center\"], [1, \"button\", \"login-button\", 3, \"click\"], [1, \"navigate-button-container\"], [1, \"navigate-button\", 3, \"click\"], [1, \"text-center\", \"error\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ÉµÉµelementStart(0, \"form\", 0, 1)(2, \"h3\", 2);\n      i0.ÉµÉµtext(3, \"Login It's Easy...\");\n      i0.ÉµÉµelementEnd();\n      i0.ÉµÉµtemplate(4, LoginComponent_h6_4_Template, 2, 2, \"h6\", 3);\n      i0.ÉµÉµelementStart(5, \"div\", 4)(6, \"label\", 5);\n      i0.ÉµÉµtext(7, \"email\");\n      i0.ÉµÉµelementEnd();\n      i0.ÉµÉµelementStart(8, \"input\", 6);\n      i0.ÉµÉµlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_8_listener() {\n        return ctx.setShowLoginError(false);\n      });\n      i0.ÉµÉµelementEnd()();\n      i0.ÉµÉµelementStart(9, \"div\", 4)(10, \"label\", 7);\n      i0.ÉµÉµtext(11, \"password\");\n      i0.ÉµÉµelementEnd();\n      i0.ÉµÉµelementStart(12, \"input\", 8);\n      i0.ÉµÉµlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_12_listener() {\n        return ctx.setShowLoginError(false);\n      });\n      i0.ÉµÉµelementEnd()();\n      i0.ÉµÉµelementStart(13, \"div\", 9)(14, \"button\", 10);\n      i0.ÉµÉµlistener(\"click\", function LoginComponent_Template_button_click_14_listener() {\n        return ctx.login();\n      });\n      i0.ÉµÉµtext(15, \" login \");\n      i0.ÉµÉµelementEnd()()();\n      i0.ÉµÉµelementStart(16, \"div\", 11)(17, \"button\", 12);\n      i0.ÉµÉµlistener(\"click\", function LoginComponent_Template_button_click_17_listener() {\n        return ctx.navigateToSignUp();\n      });\n      i0.ÉµÉµtext(18, \" Create New User \\uD83D\\uDE0A \");\n      i0.ÉµÉµelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ÉµÉµadvance(4);\n      i0.ÉµÉµproperty(\"ngIf\", !!ctx.showLoginError);\n    }\n  },\n  dependencies: [i5.NgIf, i6.ÉµNgNoValidate, i6.DefaultValueAccessor, i6.NgControlStatus, i6.NgControlStatusGroup, i6.RequiredValidator, i6.NgModel, i6.NgForm],\n  styles: [\".form-section[_ngcontent-%COMP%] {\\n  padding: 90px 50px;\\n  box-shadow: 0px 0px 20px 7px #cccccc;\\n}\\n.form-section[_ngcontent-%COMP%]   .login-button[_ngcontent-%COMP%] {\\n  background-color: #0a0d23;\\n  color: #b9da01;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ2luLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usa0JBQUE7RUFDQSxvQ0FBQTtBQUNGO0FBQ0U7RUFDRSx5QkFBQTtFQUNBLGNBQUE7QUFDSiIsImZpbGUiOiJsb2dpbi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mb3JtLXNlY3Rpb24ge1xyXG4gIHBhZGRpbmc6IDkwcHggNTBweDtcclxuICBib3gtc2hhZG93OiAwcHggMHB4IDIwcHggN3B4ICNjY2NjY2M7XHJcblxyXG4gIC5sb2dpbi1idXR0b257XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMGEwZDIzO1xyXG4gICAgY29sb3I6ICNiOWRhMDE7XHJcbiAgfVxyXG59XHJcbiJdfQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;;;;;;IAEEA;IAAuDA;IAAgCA;;;;;IAAhCA;IAAAA;;;;ACUzD,OAAM,MAAOC,cAAP,CAAqB;EAKzBC,YACUC,MADV,EAEUC,UAFV,EAGUC,WAHV,EAIUC,aAJV,EAIsC;IAH5B;IACA;IACA;IACA;IANH,kBAAqB,2CAArB;IACA,sBAA0B,KAA1B;EAMF;;EAELC,QAAQ;IACN,KAAKD,aAAL,CAAmBE,MAAnB,CAA0B,WAA1B;EACD;;EAEYC,KAAK;IAAA;;IAAA;MAChB,IAAI,KAAI,CAACC,IAAL,CAAUC,KAAd,EAAqB;QACnBC,OAAO,CAACC,GAAR,CAAY,kBAAZ;QACA,MAAMC,KAAK,GAAG,KAAI,CAACJ,IAAL,CAAUK,KAAV,CAAgBD,KAA9B;QACA,MAAME,QAAQ,GAAG,KAAI,CAACN,IAAL,CAAUK,KAAV,CAAgBC,QAAjC;QACAJ,OAAO,CAACC,GAAR,CAAY,KAAI,CAACH,IAAL,CAAUK,KAAV,CAAgBD,KAA5B,EAAmC,QAAnC,EAA6C,KAAI,CAACJ,IAAL,CAAUK,KAAV,CAAgBC,QAA7D;QACA,MAAM,KAAI,CAACX,WAAL,CAAiBY,YAAjB,CAA8BH,KAA9B,EAAqCE,QAArC,EAA+CE,IAA/C,CAAoDC,IAAI,IAAG;UAC/DP,OAAO,CAACC,GAAR,CAAY,yCAAZ;;UACA,IAAI,CAACM,IAAL,EAAW;YACT,KAAI,CAACC,cAAL,GAAsB,IAAtB;UACD;QACF,CALK,CAAN,CALmB,CAWnB;QACA;MAED,CAdD,MAcO;QACLR,OAAO,CAACC,GAAR,CAAY,sBAAZ;MACD;IAjBe;EAkBjB;;EAEMQ,iBAAiB,CAACC,MAAD,EAAgB;IACtCV,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBS,MAAvB;IACA,KAAKF,cAAL,GAAsBE,MAAtB;EACD;;EACMC,gBAAgB;IACrB,KAAKpB,MAAL,CAAYqB,QAAZ,CAAqB,CAAC,SAAD,CAArB;EACD;;AA1CwB;;;mBAAdvB,gBAAcD;AAAA;;;QAAdC;EAAcwB;EAAAC;IAAA;;;;;;;;;;;;;;;MDZ3B1B,mCAAuC,CAAvC,EAAuC,IAAvC,EAAuC,CAAvC;MACuCA;MAAkBA;MACvDA;MACAA,+BAAwB,CAAxB,EAAwB,OAAxB,EAAwB,CAAxB;MACsBA;MAAKA;MACzBA;MAAsFA;QAAA,OAAiB2B,sBAAkB,KAAlB,CAAjB;MAAyC,CAAzC;MAAtF3B;MAEFA,+BAAwB,EAAxB,EAAwB,OAAxB,EAAwB,CAAxB;MACyBA;MAAQA;MAC/BA;MAA8FA;QAAA,OAAiB2B,sBAAkB,KAAlB,CAAjB;MAAyC,CAAzC;MAA9F3B;MAEFA,gCAAqC,EAArC,EAAqC,QAArC,EAAqC,EAArC;MACsCA;QAAA,OAAS2B,WAAT;MAAgB,CAAhB;MAClC3B;MACFA;MAGJA,iCAAuC,EAAvC,EAAuC,QAAvC,EAAuC,EAAvC;MACkCA;QAAA,OAAS2B,sBAAT;MAA2B,CAA3B;MAC9B3B;MACFA;;;;MAlB+BA;MAAAA","names":["i0","LoginComponent","constructor","router","appService","authService","cookieService","ngOnInit","delete","login","form","valid","console","log","email","value","password","loginService","then","data","showLoginError","setShowLoginError","status","navigateToSignUp","navigate","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["C:\\Users\\aamer\\Desktop\\cambium\\bookmarking-app\\src\\app\\components\\login\\login.component.html","C:\\Users\\aamer\\Desktop\\cambium\\bookmarking-app\\src\\app\\components\\login\\login.component.ts"],"sourcesContent":["<form #f=\"ngForm\" class=\"form-section\">\n  <h3 class=\"text-center header-title\">Login It's Easy...</h3>\n  <h6 class=\"text-center error\" *ngIf=\"!!showLoginError\">{{loginError}}{{showLoginError}}</h6>\n  <div class=\"form-group\">\n    <label for=\"lemail\">email</label>\n    <input required ngModel type=\"email\" id=\"lemail\" name=\"email\" placeholder=\"ex@ex.com\" (ngModelChange)=\"setShowLoginError(false)\"/>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"lpassword\">password</label>\n    <input required ngModel type=\"password\" id=\"lpassword\" name=\"password\" placeholder=\"password\" (ngModelChange)=\"setShowLoginError(false)\" />\n  </div>\n  <div class=\"form-group align-center\">\n    <button class=\"button login-button\" (click)=\"login()\">\n      login\n    </button>\n  </div>\n</form>\n<div class=\"navigate-button-container\">\n  <button class=\"navigate-button\" (click)=\"navigateToSignUp()\">\n    Create New User ðŸ˜Š\n  </button>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AppServicesService } from 'src/app/services/app-services.service';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { CookieService } from 'ngx-cookie-service'\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  @ViewChild('f') form: any;\n\n  public loginError: string = \"LogIn Error, Please Try Again It's Easy..\"\n  public showLoginError: boolean = false;\n  constructor(\n    private router: Router,\n    private appService: AppServicesService,\n    private authService: AuthService,\n    private cookieService: CookieService\n  ) { }\n\n  ngOnInit(): void {\n    this.cookieService.delete('authToken')\n  }\n\n  public async login() {\n    if (this.form.valid) {\n      console.log('form is valid!!!')\n      const email = this.form.value.email\n      const password = this.form.value.password\n      console.log(this.form.value.email, ' ---- ', this.form.value.password)\n      await this.authService.loginService(email, password).then(data => {\n        console.log('loginService(email, password).then(data')\n        if (!data) {\n          this.showLoginError = true\n        }\n      })\n      // this.appService.setIsLoginStatus(true)\n      // this.router.navigate(['/'])\n\n    } else {\n      console.log('form is not valid!!!')\n    }\n  }\n\n  public setShowLoginError(status: boolean): void {\n    console.log('status ', status)\n    this.showLoginError = status\n  }\n  public navigateToSignUp() {\n    this.router.navigate(['/signup'])\n  }\n}\n"]},"metadata":{},"sourceType":"module"}